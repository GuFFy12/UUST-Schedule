name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

concurrency:
  group: tests-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  tests:
    name: Ubuntu / 3.10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Bootstrap poetry
        run: pipx install poetry

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: poetry

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true
          poetry config virtualenvs.options.no-pip true
          poetry config virtualenvs.options.no-setuptools true

      - name: Check lock file
        run: poetry check --lock

      - name: Install dependencies
        run: poetry install --with github-actions

      - name: Run mypy
        run: poetry run mypy

      - name: Run pytest
        run: poetry run pytest --cov=src --cov-report=xml

      - name: Run ruff
        run: poetry run ruff check

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          file: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}